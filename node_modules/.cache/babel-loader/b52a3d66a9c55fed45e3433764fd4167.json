{"ast":null,"code":"var _jsxFileName = \"/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport logo from \"../imge/logo.png\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`; // Map\n\n_c = Container;\n\nconst SimpleMap = props => {\n  _s();\n\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n\n  const [places, setPlaces] = useState([]);\n\n  const TenTMarker = ({\n    icon,\n    text\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n\n  React.useEffect(() => {\n    firebase.firestore().collection(\"product\").onSnapshot(collectionSnapshot => {\n      const data = collectionSnapshot.docs.map(docSnapshot => {\n        const id = docSnapshot.id;\n        return { ...docSnapshot.data(),\n          id\n        };\n      });\n      setPlaces(data);\n      console.log(data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: Key\n        },\n        defaultCenter: props.center,\n        defaultZoom: props.zoom,\n        yesIWantToUseGoogleMapApiInternals: true // 設定為 true\n        ,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => handleApiLoaded(map, maps) // 載入完成後執行\n        ,\n        children: places.map(data => /*#__PURE__*/_jsxDEV(TenTMarker // key={item.place_id}\n        , {\n          lat: data.lat,\n          lng: data.lng // placeId={item.place_id}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  );\n}; // 由於改寫成 functional component，故另外設定 defaultProps\n\n\n_s(SimpleMap, \"Ez2sxHqHwXplpokbasymv65s8jQ=\");\n\n_c2 = SimpleMap;\nSimpleMap.defaultProps = {\n  center: {\n    lat: 23.96363430162278,\n    lng: 120.97561230851146,\n    text: \"⛺️\"\n  },\n  zoom: 8\n}; // App\n\nfunction Map() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SimpleMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Map;\nexport default Map;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SimpleMap\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js"],"names":["React","useState","GoogleMapReact","Key","styled","logo","firebase","Container","div","SimpleMap","props","handleApiLoaded","map","maps","console","log","places","setPlaces","TenTMarker","icon","text","useEffect","firestore","collection","onSnapshot","collectionSnapshot","data","docs","docSnapshot","id","key","center","zoom","lat","lng","defaultProps","Map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA,CAHA,C,CAKA;;KALMD,S;;AAMN,MAAME,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFqC,CAEf;AACvB,GAHD;;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMiB,UAAU,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,kBACjB;AAAA;AAAA;AAAA;AAAA,UADF;;AAMApB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBf,IAAAA,QAAQ,CACLgB,SADH,GAEGC,UAFH,CAEc,SAFd,EAGGC,UAHH,CAGeC,kBAAD,IAAwB;AAClC,YAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBf,GAAxB,CAA6BgB,WAAD,IAAiB;AACxD,cAAMC,EAAE,GAAGD,WAAW,CAACC,EAAvB;AACA,eAAO,EAAE,GAAGD,WAAW,CAACF,IAAZ,EAAL;AAAyBG,UAAAA;AAAzB,SAAP;AACD,OAHY,CAAb;AAIAZ,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACD,KAVH;AAWD,GAZD,EAYG,EAZH;AAcA;AAAA;AACE;AACA,YAAC,SAAD;AAAA,6BAEE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEI,UAAAA,GAAG,EAAE3B;AAAP,SADpB;AAEE,QAAA,aAAa,EAAEO,KAAK,CAACqB,MAFvB;AAGE,QAAA,WAAW,EAAErB,KAAK,CAACsB,IAHrB;AAIE,QAAA,kCAAkC,MAJpC,CAIqC;AAJrC;AAKE,QAAA,iBAAiB,EAAE,CAAC;AAAEpB,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmBF,eAAe,CAACC,GAAD,EAAMC,IAAN,CALvD,CAKoE;AALpE;AAAA,kBAOGG,MAAM,CAACJ,GAAP,CAAYc,IAAD,iBACV,QAAC,UAAD,CACE;AADF;AAEE,UAAA,GAAG,EAAEA,IAAI,CAACO,GAFZ;AAGE,UAAA,GAAG,EAAEP,IAAI,CAACQ,GAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAsBD,CAhDD,C,CAkDA;;;GAlDMzB,S;;MAAAA,S;AAmDNA,SAAS,CAAC0B,YAAV,GAAyB;AACvBJ,EAAAA,MAAM,EAAE;AACNE,IAAAA,GAAG,EAAE,iBADC;AAENC,IAAAA,GAAG,EAAE,kBAFC;AAGNd,IAAAA,IAAI,EAAE;AAHA,GADe;AAMvBY,EAAAA,IAAI,EAAE;AANiB,CAAzB,C,CASA;;AACA,SAASI,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport logo from \"../imge/logo.png\";\nimport firebase from \"firebase\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`;\n\n// Map\nconst SimpleMap = (props) => {\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n  const [places, setPlaces] = useState([]);\n  const TenTMarker = ({ icon, text }) => (\n    <div>\n      {/* <img style={{ height: \"50px\", width: \"50px\" }} src={logo} alt=\"logo\" /> */}\n    </div>\n  );\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"product\")\n      .onSnapshot((collectionSnapshot) => {\n        const data = collectionSnapshot.docs.map((docSnapshot) => {\n          const id = docSnapshot.id;\n          return { ...docSnapshot.data(), id };\n        });\n        setPlaces(data);\n        console.log(data);\n      });\n  }, []);\n\n  return (\n    // Important! Always set the container height explicitly\n    <Container>\n      {/* <div style={{ height: \"100%\", width: \"100%\" }}> */}\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: Key }}\n        defaultCenter={props.center}\n        defaultZoom={props.zoom}\n        yesIWantToUseGoogleMapApiInternals // 設定為 true\n        onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)} // 載入完成後執行\n      >\n        {places.map((data) => (\n          <TenTMarker\n            // key={item.place_id}\n            lat={data.lat}\n            lng={data.lng}\n            // placeId={item.place_id}\n          />\n        ))}\n      </GoogleMapReact>\n    </Container>\n  );\n};\n\n// 由於改寫成 functional component，故另外設定 defaultProps\nSimpleMap.defaultProps = {\n  center: {\n    lat: 23.96363430162278,\n    lng: 120.97561230851146,\n    text: \"⛺️\",\n  },\n  zoom: 8,\n};\n\n// App\nfunction Map() {\n  return (\n    <div className=\"App\">\n      <SimpleMap />\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}