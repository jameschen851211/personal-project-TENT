{"ast":null,"code":"var _jsxFileName = \"/Users/victorchen/Desktop/react-test/my-app/src/components/GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport logo from \"../imge/logo.png\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInfoHeader = styled.h2`\n  color: #3264a8;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n  font-size: 15px;\n`;\nconst StyledInfoRating = styled.h3`\n  color: #b31010;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n`;\nconst StyledInfoOpening = styled.h2`\n  color: black;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n  font-size: 15px;\n`;\nconst StyledLocationBtn = styled.button`\n  margin-top: 30px;\n  margin-left: calc(50% - 75px);\n  width: 150px;\n  height: 50px;\n  font-size: 20px;\n`;\nconst StyledLoadingContent = styled.div`\n  height: 600px;\n  width: 100%;\n  background: grey;\n`;\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vmin\",\n  width: \"100%\"\n};\nexport default function App() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAAuyNVSxdv2VTjUe_N7hyH8drXIoypa_E\",\n    libraries\n  }); //   const [currentLocation, setCurrentLocation] = useState({\n  //     lat: 25.0361,\n  //     lng: 121.5372,\n  //   });\n\n  const [selected, setSelected] = useState(null);\n  const [nearby, setNearyby] = useState([]);\n  const [places, setPlaces] = useState([]); // const mapRef = useRef();\n  // const onMapLoad = useCallback((map) => {\n  //   mapRef.current = map;\n  // }, []);\n  // useEffect(() => {\n  //   setIsFetching(true)\n  //   console.log(currentLocation)\n  //   fetch(`https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${currentLocation.lat}&lng=${currentLocation.lng}`)\n  //     .then(res => res.json())\n  //     .then(json => setNearyby(json.results))\n  // }, []);\n\n  React.useEffect(() => {\n    firebase.firestore().collection(\"product\").onSnapshot(collectionSnapshot => {\n      const data = collectionSnapshot.docs.map(docSnapshot => {\n        const id = docSnapshot.id;\n        return { ...docSnapshot.data(),\n          id\n        };\n      });\n      setPlaces(data);\n      console.log(data);\n    });\n  }, []); //   useEffect(() => {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (position) => {\n  //         setCurrentLocation({\n  //           lat: position.coords.latitude,\n  //           lng: position.coords.longitude,\n  //         });\n  //         fetch(\n  //           `https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${position.coords.latitude}&lng=${position.coords.longitude}`\n  //         )\n  //           .then((res) => res.json())\n  //           .then((json) => setNearyby(json.results));\n  //         setIsNavigating(false);\n  //       },\n  //       () => {\n  //         alert(\"Please allow location tracking!\");\n  //         setIsNavigating(false);\n  //       }\n  //     );\n  //   }, []);\n  //   function dragMarker(coords) {\n  //     const { latLng } = coords;\n  //     const lat = latLng.lat();\n  //     const lng = latLng.lng();\n  //     setCurrentLocation({\n  //       lat: lat,\n  //       lng: lng,\n  //     });\n  //     fetch(\n  //       `https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${lat}&lng=${lng}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((json) => setNearyby(json.results));\n  //     setIsNavigating(false);\n  //   }\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\"; //   console.log(nearby);\n  //   console.log(selected);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this) // <div>\n  //   <GoogleMap\n  //     id=\"map\"\n  //     mapContainerStyle={mapContainerStyle}\n  //     zoom={8}\n  //     center={{\n  //       lat: 23.96363430162278,\n  //       lng: 120.97561230851146,\n  //     }}\n  //     clickableIcons={false}\n  //     // onLoad={onMapLoad}\n  //   >\n  //     {/* <Marker\n  //       position={currentLocation}\n  //       draggable={true}\n  //       onDragEnd={(coords) => dragMarker(coords)}\n  //     /> */}\n  //     {places.map((marker) => (\n  //       <Marker\n  //         key={marker.placeId}\n  //         position={{\n  //           lat: marker.latitude.lat,\n  //           lng: marker.latitude.lng,\n  //         }}\n  //         onClick={() => {\n  //           setSelected(marker);\n  //         }}\n  //         icon={{\n  //           url: logo,\n  //           origin: new window.google.maps.Point(0, 0),\n  //           anchor: new window.google.maps.Point(20, 20),\n  //           scaledSize: new window.google.maps.Size(40, 40),\n  //         }}\n  //       />\n  //     ))}\n  //     {selected ? (\n  //       <InfoWindow\n  //         position={{\n  //           lat: selected.latitude.lat,\n  //           lng: selected.latitude.lng,\n  //         }}\n  //         onCloseClick={() => {\n  //           setSelected(null);\n  //         }}\n  //       >\n  //         <div>\n  //           <StyledInfoHeader>{selected.name}</StyledInfoHeader>\n  //           <StyledInfoRating>\n  //             {\" \"}\n  //             ‚≠ê {selected.stars} üìç {selected.address}\n  //           </StyledInfoRating>\n  //         </div>\n  //       </InfoWindow>\n  //     ) : null}\n  //   </GoogleMap>\n  // </div>\n  ;\n}\n\n_s(App, \"OIOVVPN+lKw2RU7FdEjdN9iYONI=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/GoogleMap.js"],"names":["React","useCallback","useRef","useState","useEffect","GoogleMap","useLoadScript","Marker","InfoWindow","logo","styled","firebase","StyledInfoHeader","h2","StyledInfoRating","h3","StyledInfoOpening","StyledLocationBtn","button","StyledLoadingContent","div","libraries","mapContainerStyle","height","width","App","isLoaded","loadError","googleMapsApiKey","selected","setSelected","nearby","setNearyby","places","setPlaces","firestore","collection","onSnapshot","collectionSnapshot","data","docs","map","docSnapshot","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,EAAG;AACnC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,EAAG;AACnC;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,iBAAiB,GAAGN,MAAM,CAACG,EAAG;AACpC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMI,iBAAiB,GAAGP,MAAM,CAACQ,MAAO;AACxC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,oBAAoB,GAAGT,MAAM,CAACU,GAAI;AACxC;AACA;AACA;AACA,CAJA;AAMA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,SADgB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAA1B;AAKA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BrB,aAAa,CAAC;AAC5CsB,IAAAA,gBAAgB,EAAE,yCAD0B;AAE5CP,IAAAA;AAF4C,GAAD,CAA7C,CAD4B,CAM5B;AACA;AACA;AACA;;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAC4B,MAAD,EAASC,UAAT,IAAuB7B,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,EAAD,CAApC,CAb4B,CAe5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpBO,IAAAA,QAAQ,CACLwB,SADH,GAEGC,UAFH,CAEc,SAFd,EAGGC,UAHH,CAGeC,kBAAD,IAAwB;AAClC,YAAMC,IAAI,GAAGD,kBAAkB,CAACE,IAAnB,CAAwBC,GAAxB,CAA6BC,WAAD,IAAiB;AACxD,cAAMC,EAAE,GAAGD,WAAW,CAACC,EAAvB;AACA,eAAO,EAAE,GAAGD,WAAW,CAACH,IAAZ,EAAL;AAAyBI,UAAAA;AAAzB,SAAP;AACD,OAHY,CAAb;AAIAT,MAAAA,SAAS,CAACK,IAAD,CAAT;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,KAVH;AAWD,GAZD,EAYG,EAZH,EA5B4B,CA0C5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIZ,SAAJ,EAAe,OAAO,OAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,YAAP,CAjFa,CAmF5B;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DF;AA4DD;;GAlJuBD,G;UACUnB,a;;;KADVmB,G","sourcesContent":["import React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport logo from \"../imge/logo.png\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\n\nconst StyledInfoHeader = styled.h2`\n  color: #3264a8;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst StyledInfoRating = styled.h3`\n  color: #b31010;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst StyledInfoOpening = styled.h2`\n  color: black;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst StyledLocationBtn = styled.button`\n  margin-top: 30px;\n  margin-left: calc(50% - 75px);\n  width: 150px;\n  height: 50px;\n  font-size: 20px;\n`;\n\nconst StyledLoadingContent = styled.div`\n  height: 600px;\n  width: 100%;\n  background: grey;\n`;\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vmin\",\n  width: \"100%\",\n};\n\nexport default function App() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAAuyNVSxdv2VTjUe_N7hyH8drXIoypa_E\",\n    libraries,\n  });\n\n  //   const [currentLocation, setCurrentLocation] = useState({\n  //     lat: 25.0361,\n  //     lng: 121.5372,\n  //   });\n\n  const [selected, setSelected] = useState(null);\n  const [nearby, setNearyby] = useState([]);\n  const [places, setPlaces] = useState([]);\n\n  // const mapRef = useRef();\n  // const onMapLoad = useCallback((map) => {\n  //   mapRef.current = map;\n  // }, []);\n\n  // useEffect(() => {\n  //   setIsFetching(true)\n  //   console.log(currentLocation)\n  //   fetch(`https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${currentLocation.lat}&lng=${currentLocation.lng}`)\n  //     .then(res => res.json())\n  //     .then(json => setNearyby(json.results))\n  // }, []);\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"product\")\n      .onSnapshot((collectionSnapshot) => {\n        const data = collectionSnapshot.docs.map((docSnapshot) => {\n          const id = docSnapshot.id;\n          return { ...docSnapshot.data(), id };\n        });\n        setPlaces(data);\n        console.log(data);\n      });\n  }, []);\n\n  //   useEffect(() => {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (position) => {\n  //         setCurrentLocation({\n  //           lat: position.coords.latitude,\n  //           lng: position.coords.longitude,\n  //         });\n  //         fetch(\n  //           `https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${position.coords.latitude}&lng=${position.coords.longitude}`\n  //         )\n  //           .then((res) => res.json())\n  //           .then((json) => setNearyby(json.results));\n  //         setIsNavigating(false);\n  //       },\n  //       () => {\n  //         alert(\"Please allow location tracking!\");\n  //         setIsNavigating(false);\n  //       }\n  //     );\n  //   }, []);\n\n  //   function dragMarker(coords) {\n  //     const { latLng } = coords;\n  //     const lat = latLng.lat();\n  //     const lng = latLng.lng();\n\n  //     setCurrentLocation({\n  //       lat: lat,\n  //       lng: lng,\n  //     });\n  //     fetch(\n  //       `https://us-central1-uniquefit-william.cloudfunctions.net/getGoogleNearbySearch?lat=${lat}&lng=${lng}`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((json) => setNearyby(json.results));\n  //     setIsNavigating(false);\n  //   }\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  //   console.log(nearby);\n  //   console.log(selected);\n\n  return (\n    <div>hi</div>\n    // <div>\n    //   <GoogleMap\n    //     id=\"map\"\n    //     mapContainerStyle={mapContainerStyle}\n    //     zoom={8}\n    //     center={{\n    //       lat: 23.96363430162278,\n    //       lng: 120.97561230851146,\n    //     }}\n    //     clickableIcons={false}\n    //     // onLoad={onMapLoad}\n    //   >\n    //     {/* <Marker\n    //       position={currentLocation}\n    //       draggable={true}\n    //       onDragEnd={(coords) => dragMarker(coords)}\n    //     /> */}\n    //     {places.map((marker) => (\n    //       <Marker\n    //         key={marker.placeId}\n    //         position={{\n    //           lat: marker.latitude.lat,\n    //           lng: marker.latitude.lng,\n    //         }}\n    //         onClick={() => {\n    //           setSelected(marker);\n    //         }}\n    //         icon={{\n    //           url: logo,\n    //           origin: new window.google.maps.Point(0, 0),\n    //           anchor: new window.google.maps.Point(20, 20),\n    //           scaledSize: new window.google.maps.Size(40, 40),\n    //         }}\n    //       />\n    //     ))}\n\n    //     {selected ? (\n    //       <InfoWindow\n    //         position={{\n    //           lat: selected.latitude.lat,\n    //           lng: selected.latitude.lng,\n    //         }}\n    //         onCloseClick={() => {\n    //           setSelected(null);\n    //         }}\n    //       >\n    //         <div>\n    //           <StyledInfoHeader>{selected.name}</StyledInfoHeader>\n    //           <StyledInfoRating>\n    //             {\" \"}\n    //             ‚≠ê {selected.stars} üìç {selected.address}\n    //           </StyledInfoRating>\n    //         </div>\n    //       </InfoWindow>\n    //     ) : null}\n    //   </GoogleMap>\n    // </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}