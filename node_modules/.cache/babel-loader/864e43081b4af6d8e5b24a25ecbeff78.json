{"ast":null,"code":"var _jsxFileName = \"/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport Logo from \"../imge/logo.png\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPositionMarker = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 40\n}, this);\n\n_c = MyPositionMarker;\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`;\n_c2 = Container;\n\nconst SimpleMap = props => {\n  _s();\n\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n\n  const [place, setPlace] = useState([]); // const user = firebase.auth().currentUser;\n  // const db = firebase.firestore();\n  // const userId = user.uid;\n  // const docRef = db.collection(\"users\").doc(`${userId}`);\n\n  React.useEffect(() => {\n    firebase.firestore().collection(\"product\").onSnapshot(snapshot => {\n      const data = snapshot.data();\n      setPlace(data);\n      console.log(data);\n    });\n  }, []); // React.useEffect(() => {\n  // \tdocRef.collection(\"likes\").onSnapshot((snapshot) => {\n  // \t\tconst item = [];\n  // \t\tsnapshot.forEach((doc) => {\n  // \t\t\titem.push(doc.data());\n  // \t\t});\n  // \t\tsetCollectPlace(item);\n  // \t});\n  // }, []);\n\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: Key\n        },\n        defaultCenter: props.center,\n        defaultZoom: props.zoom,\n        yesIWantToUseGoogleMapApiInternals: true // 設定為 true\n        ,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => handleApiLoaded(map, maps) // 載入完成後執行\n        ,\n        children: place.map(item => {\n          return /*#__PURE__*/_jsxDEV(MyPositionMarker, {\n            lat: item.latitude.lat,\n            lng: item.latitude.lng,\n            text: \"\"\n          }, item.placeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}; // 由於改寫成 functional component，故另外設定 defaultProps\n\n\n_s(SimpleMap, \"YTMCknIluPa4oPb+pR8UBNFiABg=\");\n\n_c3 = SimpleMap;\nSimpleMap.defaultProps = {\n  center: {\n    lat: 25.04,\n    lng: 121.5\n  },\n  zoom: 5\n}; // App\n\nfunction MultiMap() {\n  return /*#__PURE__*/_jsxDEV(SimpleMap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = MultiMap;\nexport default Map;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyPositionMarker\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"SimpleMap\");\n$RefreshReg$(_c4, \"MultiMap\");","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js"],"names":["React","useState","GoogleMapReact","Key","styled","Logo","firebase","MyPositionMarker","text","Container","div","SimpleMap","props","handleApiLoaded","map","maps","console","log","place","setPlace","useEffect","firestore","collection","onSnapshot","snapshot","data","key","center","zoom","item","latitude","lat","lng","placeId","defaultProps","MultiMap","Map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAAc,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAvC;;KAAMD,gB;AAEN,MAAME,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA,CAHA;MAAMD,S;;AAKN,MAAME,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFqC,CAEf;AACvB,GAHD;;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC,CAN2B,CAO3B;AACA;AACA;AACA;;AAEAD,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBd,IAAAA,QAAQ,CACLe,SADH,GAEGC,UAFH,CAEc,SAFd,EAGGC,UAHH,CAGeC,QAAD,IAAc;AACxB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACAN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACD,KAPH;AAQD,GATD,EASG,EATH,EAZ2B,CAuB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACE;AACA,YAAC,SAAD;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAEvB;AAAP,SADpB;AAEE,QAAA,aAAa,EAAES,KAAK,CAACe,MAFvB;AAGE,QAAA,WAAW,EAAEf,KAAK,CAACgB,IAHrB;AAIE,QAAA,kCAAkC,MAJpC,CAIqC;AAJrC;AAKE,QAAA,iBAAiB,EAAE,CAAC;AAAEd,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmBF,eAAe,CAACC,GAAD,EAAMC,IAAN,CALvD,CAKoE;AALpE;AAAA,kBAOGG,KAAK,CAACJ,GAAN,CAAWe,IAAD,IAAU;AACnB,8BACE,QAAC,gBAAD;AAEE,YAAA,GAAG,EAAEA,IAAI,CAACC,QAAL,CAAcC,GAFrB;AAGE,YAAA,GAAG,EAAEF,IAAI,CAACC,QAAL,CAAcE,GAHrB;AAIE,YAAA,IAAI,EAAC;AAJP,aACOH,IAAI,CAACI,OADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAuBD,CAvDD,C,CAyDA;;;GAzDMtB,S;;MAAAA,S;AA0DNA,SAAS,CAACuB,YAAV,GAAyB;AACvBP,EAAAA,MAAM,EAAE;AACNI,IAAAA,GAAG,EAAE,KADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GADe;AAKvBJ,EAAAA,IAAI,EAAE;AALiB,CAAzB,C,CAQA;;AACA,SAASO,QAAT,GAAoB;AAClB,sBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAFQA,Q;AAIT,eAAeC,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport Logo from \"../imge/logo.png\";\nimport firebase from \"firebase\";\n\nconst MyPositionMarker = ({ text }) => <Logo />;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`;\n\nconst SimpleMap = (props) => {\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n\n  const [place, setPlace] = useState([]);\n  // const user = firebase.auth().currentUser;\n  // const db = firebase.firestore();\n  // const userId = user.uid;\n  // const docRef = db.collection(\"users\").doc(`${userId}`);\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"product\")\n      .onSnapshot((snapshot) => {\n        const data = snapshot.data();\n        setPlace(data);\n        console.log(data);\n      });\n  }, []);\n\n  // React.useEffect(() => {\n  // \tdocRef.collection(\"likes\").onSnapshot((snapshot) => {\n  // \t\tconst item = [];\n  // \t\tsnapshot.forEach((doc) => {\n  // \t\t\titem.push(doc.data());\n  // \t\t});\n  // \t\tsetCollectPlace(item);\n  // \t});\n  // }, []);\n  return (\n    // Important! Always set the container height explicitly\n    <Container>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: Key }}\n        defaultCenter={props.center}\n        defaultZoom={props.zoom}\n        yesIWantToUseGoogleMapApiInternals // 設定為 true\n        onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)} // 載入完成後執行\n      >\n        {place.map((item) => {\n          return (\n            <MyPositionMarker\n              key={item.placeId}\n              lat={item.latitude.lat}\n              lng={item.latitude.lng}\n              text=\"\"\n            />\n          );\n        })}\n      </GoogleMapReact>\n    </Container>\n  );\n};\n\n// 由於改寫成 functional component，故另外設定 defaultProps\nSimpleMap.defaultProps = {\n  center: {\n    lat: 25.04,\n    lng: 121.5,\n  },\n  zoom: 5,\n};\n\n// App\nfunction MultiMap() {\n  return <SimpleMap />;\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}