{"ast":null,"code":"import _objectSpread from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import{zhTW}from\"date-fns/locale\";import{DateRangePicker}from\"react-nice-dates\";import\"react-nice-dates/build/style.css\";import styled from\"styled-components\";import firebase from\"firebase\";import{useParams}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Input=styled.input(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 139px;\\n  height: 55px;\\n  cursor: pointer;\\n  border: 1px solid rgb(221, 221, 221);\\n\"])));var Range=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 0px 20px;\\n  padding: 10px;\\n\"])));function DateRangePickerExample(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),successfullyOrder=_React$useState2[0],setSuccessfullyOrder=_React$useState2[1];var _useParams=useParams(),itemID=_useParams.itemID;var startDate=successfullyOrder.map(function(date){return date.startDate.seconds*1000;});console.log(startDate);var endDate=successfullyOrder.map(function(date){return date.endDate.seconds*1000;});var Days=(endDate[0]-startDate[0])/(24*60*60)/1000;console.log(Days);var DayRange=[];console.log(DayRange);for(var i=0;i<Days;i++){DayRange.push(startDate[0]+24*60*60*1000*(i+1));}function isDateInArray(value,array){for(var _i=0;_i<array.length;_i++){if(value===array[_i]){return true;}}return false;}var modifiers={disabled:function disabled(date){return+date===startDate[0]||isDateInArray(+date,DayRange);}};React.useEffect(function(){firebase.firestore().collection(\"successfullyOrder\").where(\"itemID\",\"==\",itemID).onSnapshot(function(querySnapshot){var data=[];querySnapshot.forEach(function(doc){data.push(doc.data());});setSuccessfullyOrder(data);console.log(data);});},[]);return/*#__PURE__*/_jsx(DateRangePicker,{startDate:props.startDate,endDate:props.endDate,onStartDateChange:props.setStartDate,onEndDateChange:props.setEndDate,minimumDate:new Date(),minimumLength:1,format:\"dd MMM yyyy\",locale:zhTW,modifiers:modifiers// modifiersClassNames={modifiersClassNames}\n,children:function children(_ref){var startDateInputProps=_ref.startDateInputProps,endDateInputProps=_ref.endDateInputProps,focus=_ref.focus;return/*#__PURE__*/_jsxs(Range,{children:[/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},startDateInputProps),{},{placeholder:\"\\u5165\\u4F4F\"})),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},endDateInputProps),{},{placeholder:\"\\u9000\\u623F\"}))]});}});}export default DateRangePickerExample;","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/DateRangePickExample.js"],"names":["React","zhTW","DateRangePicker","styled","firebase","useParams","Input","input","Range","div","DateRangePickerExample","props","useState","successfullyOrder","setSuccessfullyOrder","itemID","startDate","map","date","seconds","console","log","endDate","Days","DayRange","i","push","isDateInArray","value","array","length","modifiers","disabled","useEffect","firestore","collection","where","onSnapshot","querySnapshot","data","forEach","doc","setStartDate","setEndDate","Date","startDateInputProps","endDateInputProps","focus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { zhTW } from \"date-fns/locale\";\nimport { DateRangePicker } from \"react-nice-dates\";\nimport \"react-nice-dates/build/style.css\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { useParams } from \"react-router\";\n\nconst Input = styled.input`\n  width: 139px;\n  height: 55px;\n  cursor: pointer;\n  border: 1px solid rgb(221, 221, 221);\n`;\n\nconst Range = styled.div`\n  margin: 0px 20px;\n  padding: 10px;\n`;\n\nfunction DateRangePickerExample(props) {\n  const [successfullyOrder, setSuccessfullyOrder] = React.useState([]);\n  const { itemID } = useParams();\n\n  const startDate = successfullyOrder.map((date) => {\n    return date.startDate.seconds * 1000;\n  });\n\n  console.log(startDate);\n\n  const endDate = successfullyOrder.map((date) => {\n    return date.endDate.seconds * 1000;\n  });\n\n  const Days = (endDate[0] - startDate[0]) / (24 * 60 * 60) / 1000;\n  console.log(Days);\n\n  let DayRange = [];\n  console.log(DayRange);\n\n  for (let i = 0; i < Days; i++) {\n    DayRange.push(startDate[0] + 24 * 60 * 60 * 1000 * (i + 1));\n  }\n\n  function isDateInArray(value, array) {\n    for (let i = 0; i < array.length; i++) {\n      if (value === array[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const modifiers = {\n    disabled: (date) => {\n      return +date === startDate[0] || isDateInArray(+date, DayRange);\n    },\n  };\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"successfullyOrder\")\n      .where(\"itemID\", \"==\", itemID)\n      .onSnapshot((querySnapshot) => {\n        const data = [];\n        querySnapshot.forEach((doc) => {\n          data.push(doc.data());\n        });\n        setSuccessfullyOrder(data);\n        console.log(data);\n      });\n  }, []);\n\n  return (\n    <DateRangePicker\n      startDate={props.startDate}\n      endDate={props.endDate}\n      onStartDateChange={props.setStartDate}\n      onEndDateChange={props.setEndDate}\n      minimumDate={new Date()}\n      minimumLength={1}\n      format=\"dd MMM yyyy\"\n      locale={zhTW}\n      modifiers={modifiers}\n      // modifiersClassNames={modifiersClassNames}\n    >\n      {({ startDateInputProps, endDateInputProps, focus }) => (\n        <Range>\n          <Input {...startDateInputProps} placeholder=\"入住\" />\n          <Input {...endDateInputProps} placeholder=\"退房\" />\n        </Range>\n      )}\n    </DateRangePicker>\n  );\n}\n\nexport default DateRangePickerExample;\n"]},"metadata":{},"sourceType":"module"}