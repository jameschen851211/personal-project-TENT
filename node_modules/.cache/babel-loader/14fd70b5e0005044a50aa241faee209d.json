{"ast":null,"code":"import _objectSpread from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import styled from\"styled-components\";import PlacesAutocomplete,{geocodeByAddress,getLatLng}from\"react-places-autocomplete\";import{jsx as _jsx}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InputArea=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 30%;\\n  margin: 15px 0px;\\n\"])));var Input=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-radius: 5px;\\n  width: 100%;\\n  height: 4vmin;\\n  padding-left: 10px;\\n  padding-top: 0.5vmin;\\n  font-size: 2vmin;\\n  @media screen and (max-width: 800px) {\\n    font-size: 1.5vmin;\\n  }\\n\"])));function MapAutocomplete(props){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),address=_React$useState2[0],setAddress=_React$useState2[1];var _React$useState3=React.useState({lat:null,lng:null}),_React$useState4=_slicedToArray(_React$useState3,2),coordinates=_React$useState4[0],setCoordinates=_React$useState4[1];var handleSelect=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pickValue){var results,latLng,placeId,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return geocodeByAddress(pickValue);case 2:results=_context.sent;_context.next=5;return getLatLng(results[0]);case 5:latLng=_context.sent;placeId=results[0].place_id;setAddress(pickValue);setCoordinates(latLng);// 把座標位置和地址、placeId傳回去給父層\ndata=[pickValue,placeId,latLng];props.placeaddress(data);case 11:case\"end\":return _context.stop();}}},_callee);}));return function handleSelect(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(InputArea,{children:/*#__PURE__*/_jsx(PlacesAutocomplete,{value:address,onChange:setAddress,onSelect:handleSelect,children:function children(_ref2){var getInputProps=_ref2.getInputProps,suggestions=_ref2.suggestions,getSuggestionItemProps=_ref2.getSuggestionItemProps,loading=_ref2.loading;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,_objectSpread({},getInputProps({placeholder:\"Type address\"}))),/*#__PURE__*/_jsxs(\"div\",{children:[loading?/*#__PURE__*/_jsx(\"div\",{children:\"...loading\"}):null,suggestions.map(function(suggestion){var style={backgroundColor:suggestion.active?\"#16A085\":\"#fff\"};return/*#__PURE__*/_createElement(\"div\",_objectSpread(_objectSpread({},getSuggestionItemProps(suggestion,{style:style})),{},{key:suggestion.placeId}),suggestion.description);})]})]});}})});}export default MapAutocomplete;","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/MapAutocamplete.js"],"names":["React","styled","PlacesAutocomplete","geocodeByAddress","getLatLng","InputArea","div","Input","input","MapAutocomplete","props","useState","address","setAddress","lat","lng","coordinates","setCoordinates","handleSelect","pickValue","results","latLng","placeId","place_id","data","placeaddress","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description"],"mappings":"uqBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,kBAAP,EACEC,gBADF,CAEEC,SAFF,KAGO,2BAHP,C,2IAKA,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAACK,GAAV,uGAAf,CAKA,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACO,KAAV,2QAAX,CAYA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,oBAA8BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA,qBAAsCb,KAAK,CAACW,QAAN,CAAe,CACnDG,GAAG,CAAE,IAD8C,CAEnDC,GAAG,CAAE,IAF8C,CAAf,CAAtC,qDAAOC,WAAP,qBAAoBC,cAApB,qBAKA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,SAAP,wKACGhB,CAAAA,gBAAgB,CAACgB,SAAD,CADnB,QACbC,OADa,qCAEEhB,CAAAA,SAAS,CAACgB,OAAO,CAAC,CAAD,CAAR,CAFX,QAEbC,MAFa,eAGbC,OAHa,CAGHF,OAAO,CAAC,CAAD,CAAP,CAAWG,QAHR,CAInBV,UAAU,CAACM,SAAD,CAAV,CACAF,cAAc,CAACI,MAAD,CAAd,CAEA;AACMG,IARa,CAQN,CAACL,SAAD,CAAYG,OAAZ,CAAqBD,MAArB,CARM,CASnBX,KAAK,CAACe,YAAN,CAAmBD,IAAnB,EATmB,uDAAH,kBAAZN,CAAAA,YAAY,4CAAlB,CAYA,mBACE,KAAC,SAAD,wBACE,KAAC,kBAAD,EACE,KAAK,CAAEN,OADT,CAEE,QAAQ,CAAEC,UAFZ,CAGE,QAAQ,CAAEK,YAHZ,UAKG,4BAAGQ,CAAAA,aAAH,OAAGA,aAAH,CAAkBC,WAAlB,OAAkBA,WAAlB,CAA+BC,sBAA/B,OAA+BA,sBAA/B,CAAuDC,OAAvD,OAAuDA,OAAvD,oBACC,oCAIE,KAAC,KAAD,kBAAWH,aAAa,CAAC,CAAEI,WAAW,CAAE,cAAf,CAAD,CAAxB,EAJF,cAKE,uBACGD,OAAO,cAAG,mCAAH,CAA2B,IADrC,CAEGF,WAAW,CAACI,GAAZ,CAAgB,SAACC,UAAD,CAAgB,CAC/B,GAAMC,CAAAA,KAAK,CAAG,CACZC,eAAe,CAAEF,UAAU,CAACG,MAAX,CAAoB,SAApB,CAAgC,MADrC,CAAd,CAIA,mBACE,oDACMP,sBAAsB,CAACI,UAAD,CAAa,CAAEC,KAAK,CAALA,KAAF,CAAb,CAD5B,MAEE,GAAG,CAAED,UAAU,CAACV,OAFlB,GAIGU,UAAU,CAACI,WAJd,CADF,CAQD,CAbA,CAFH,GALF,GADD,EALH,EADF,EADF,CAmCD,CAED,cAAe3B,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nconst InputArea = styled.div`\n  width: 30%;\n  margin: 15px 0px;\n`;\n\nconst Input = styled.input`\n  border-radius: 5px;\n  width: 100%;\n  height: 4vmin;\n  padding-left: 10px;\n  padding-top: 0.5vmin;\n  font-size: 2vmin;\n  @media screen and (max-width: 800px) {\n    font-size: 1.5vmin;\n  }\n`;\n\nfunction MapAutocomplete(props) {\n  const [address, setAddress] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null,\n  });\n\n  const handleSelect = async (pickValue) => {\n    const results = await geocodeByAddress(pickValue);\n    const latLng = await getLatLng(results[0]);\n    const placeId = results[0].place_id;\n    setAddress(pickValue);\n    setCoordinates(latLng);\n\n    // 把座標位置和地址、placeId傳回去給父層\n    const data = [pickValue, placeId, latLng];\n    props.placeaddress(data);\n  };\n\n  return (\n    <InputArea>\n      <PlacesAutocomplete\n        value={address}\n        onChange={setAddress}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            {/* <p>Latitude：{coordinates.lat}</p> */}\n            {/* <p>Longitude：{coordinates.lng}</p> */}\n\n            <Input {...getInputProps({ placeholder: \"Type address\" })} />\n            <div>\n              {loading ? <div>...loading</div> : null}\n              {suggestions.map((suggestion) => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#16A085\" : \"#fff\",\n                };\n\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, { style })}\n                    key={suggestion.placeId}\n                  >\n                    {suggestion.description}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </InputArea>\n  );\n}\n\nexport default MapAutocomplete;\n"]},"metadata":{},"sourceType":"module"}