{"ast":null,"code":"var _jsxFileName = \"/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { P1 } from \"../image/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPositionMarker = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(P1, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 40\n}, this);\n\n_c = MyPositionMarker;\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`; // Map\n\n_c2 = Container;\n\nconst SimpleMap = props => {\n  _s();\n\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n\n  const [collectPlace, setCollectPlace] = useState([]);\n  const user = firebase.auth().currentUser;\n  const db = firebase.firestore();\n  const userId = user.uid;\n  const docRef = db.collection(\"users\").doc(`${userId}`);\n  React.useEffect(() => {\n    // firebase.firestore().collection('')\n    docRef.collection(\"likes\").onSnapshot(snapshot => {\n      const item = [];\n      snapshot.forEach(doc => {\n        item.push(doc.data());\n      });\n      setCollectPlace(item);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: Key\n        },\n        defaultCenter: props.center,\n        defaultZoom: props.zoom,\n        yesIWantToUseGoogleMapApiInternals: true // 設定為 true\n        ,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => handleApiLoaded(map, maps) // 載入完成後執行\n        ,\n        children: collectPlace.map(item => {\n          return /*#__PURE__*/_jsxDEV(MyPositionMarker, {\n            lat: item.latitude.lat,\n            lng: item.latitude.lng,\n            text: \"\"\n          }, item.placeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}; // 由於改寫成 functional component，故另外設定 defaultProps\n\n\n_s(SimpleMap, \"wzDs3gKpzbXwPb7RzTDj/plJZzo=\");\n\n_c3 = SimpleMap;\nSimpleMap.defaultProps = {\n  center: {\n    lat: 25.04,\n    lng: 121.5\n  },\n  zoom: 5\n}; // App\n\nfunction MultiMap() {\n  return /*#__PURE__*/_jsxDEV(SimpleMap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = MultiMap;\nexport default Map;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyPositionMarker\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"SimpleMap\");\n$RefreshReg$(_c4, \"MultiMap\");","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/Map.js"],"names":["React","useState","GoogleMapReact","Key","styled","firebase","P1","MyPositionMarker","text","Container","div","SimpleMap","props","handleApiLoaded","map","maps","console","log","collectPlace","setCollectPlace","user","auth","currentUser","db","firestore","userId","uid","docRef","collection","doc","useEffect","onSnapshot","snapshot","item","forEach","push","data","key","center","zoom","latitude","lat","lng","placeId","defaultProps","MultiMap","Map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Key } from \"./Key\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { P1 } from \"../image/logo.png\";\n\nconst MyPositionMarker = ({ text }) => <P1 />;\nconst Container = styled.div`\n  width: 100%;\n  height: 100vmin;\n`;\n\n// Map\nconst SimpleMap = (props) => {\n  const handleApiLoaded = (map, maps) => {\n    // use map and maps objects\n    console.log(\"載入完成!\"); // 印出「載入完成」\n  };\n\n  const [collectPlace, setCollectPlace] = useState([]);\n  const user = firebase.auth().currentUser;\n  const db = firebase.firestore();\n  const userId = user.uid;\n  const docRef = db.collection(\"users\").doc(`${userId}`);\n\n  React.useEffect(() => {\n    // firebase.firestore().collection('')\n\n    docRef.collection(\"likes\").onSnapshot((snapshot) => {\n      const item = [];\n      snapshot.forEach((doc) => {\n        item.push(doc.data());\n      });\n      setCollectPlace(item);\n    });\n  }, []);\n  return (\n    // Important! Always set the container height explicitly\n    <Container>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: Key }}\n        defaultCenter={props.center}\n        defaultZoom={props.zoom}\n        yesIWantToUseGoogleMapApiInternals // 設定為 true\n        onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)} // 載入完成後執行\n      >\n        {collectPlace.map((item) => {\n          return (\n            <MyPositionMarker\n              key={item.placeId}\n              lat={item.latitude.lat}\n              lng={item.latitude.lng}\n              text=\"\"\n            />\n          );\n        })}\n      </GoogleMapReact>\n    </Container>\n  );\n};\n\n// 由於改寫成 functional component，故另外設定 defaultProps\nSimpleMap.defaultProps = {\n  center: {\n    lat: 25.04,\n    lng: 121.5,\n  },\n  zoom: 5,\n};\n\n// App\nfunction MultiMap() {\n  return <SimpleMap />;\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}