{"ast":null,"code":"import _objectSpread from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/victorchen/Desktop/react-test/my-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useCallback,useRef,useState,useEffect}from\"react\";import{GoogleMap,useLoadScript,Marker,InfoWindow}from\"@react-google-maps/api\";import tent from\"../imge/camping-tent.png\";import styled from\"styled-components\";import firebase from\"firebase\";import{useParams}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledInfoRating=styled.h3(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: gray;\\n  font-family: sans-serif;\\n  font-weight: bold;\\n  text-align: center;\\n\"])));var libraries=[\"places\"];var mapContainerStyle={height:\"50vmin\",width:\"100%\"};export default function App(){var _useLoadScript=useLoadScript({googleMapsApiKey:\"AIzaSyAAuyNVSxdv2VTjUe_N7hyH8drXIoypa_E\",libraries:libraries}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),places=_useState4[0],setPlaces=_useState4[1];var _useParams=useParams(),itemID=_useParams.itemID;React.useEffect(function(){firebase.firestore().collection(\"product\").where(\"__name__\",\"==\",itemID).onSnapshot(function(collectionSnapshot){var data=collectionSnapshot.docs.map(function(docSnapshot){var id=docSnapshot.id;return _objectSpread(_objectSpread({},docSnapshot.data()),{},{id:id});});setPlaces(data);console.log(data);});},[]);if(loadError)return\"Error\";if(!isLoaded)return\"Loading...\";//   console.log(nearby);\n//   console.log(selected);\nreturn places?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(GoogleMap,{id:\"map\",mapContainerStyle:mapContainerStyle,zoom:13,center:{lat:places[0].latitude.lat,lng:places[0].latitude.lng},clickableIcons:false// onLoad={onMapLoad}\n,children:[places.map(function(marker){return/*#__PURE__*/_jsx(Marker,{position:{lat:marker.latitude.lat,lng:marker.latitude.lng},onClick:function onClick(){setSelected(marker);},icon:{url:tent,origin:new window.google.maps.Point(0,0),anchor:new window.google.maps.Point(20,20),scaledSize:new window.google.maps.Size(40,40)}},marker.placeId);}),selected?/*#__PURE__*/_jsx(InfoWindow,{position:{lat:selected.latitude.lat,lng:selected.latitude.lng},onCloseClick:function onCloseClick(){setSelected(null);},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(StyledInfoRating,{children:[\"\\uD83D\\uDCCD\",selected.address]})})}):null]})}):/*#__PURE__*/_jsx(\"div\",{children:\"loading\"});}","map":{"version":3,"sources":["/Users/victorchen/Desktop/react-test/my-app/src/components/MapProductDetail.js"],"names":["React","useCallback","useRef","useState","useEffect","GoogleMap","useLoadScript","Marker","InfoWindow","tent","styled","firebase","useParams","StyledInfoRating","h3","libraries","mapContainerStyle","height","width","App","googleMapsApiKey","isLoaded","loadError","selected","setSelected","places","setPlaces","itemID","firestore","collection","where","onSnapshot","collectionSnapshot","data","docs","map","docSnapshot","id","console","log","lat","latitude","lng","marker","url","origin","window","google","maps","Point","anchor","scaledSize","Size","placeId","address"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport tent from \"../imge/camping-tent.png\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\nimport { useParams } from \"react-router\";\n\nconst StyledInfoRating = styled.h3`\n  color: gray;\n  font-family: sans-serif;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"50vmin\",\n  width: \"100%\",\n};\n\nexport default function App() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyAAuyNVSxdv2VTjUe_N7hyH8drXIoypa_E\",\n    libraries,\n  });\n\n  const [selected, setSelected] = useState(null);\n  const [places, setPlaces] = useState();\n  const { itemID } = useParams();\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"product\")\n      .where(\"__name__\", \"==\", itemID)\n      .onSnapshot((collectionSnapshot) => {\n        const data = collectionSnapshot.docs.map((docSnapshot) => {\n          const id = docSnapshot.id;\n          return { ...docSnapshot.data(), id };\n        });\n        setPlaces(data);\n        console.log(data);\n      });\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  //   console.log(nearby);\n  //   console.log(selected);\n\n  return places ? (\n    <div>\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={13}\n        center={{\n          lat: places[0].latitude.lat,\n          lng: places[0].latitude.lng,\n        }}\n        clickableIcons={false}\n        // onLoad={onMapLoad}\n      >\n        {/* <Marker\n          position={currentLocation}\n          draggable={true}\n          onDragEnd={(coords) => dragMarker(coords)}\n        /> */}\n        {places.map((marker) => (\n          <Marker\n            key={marker.placeId}\n            position={{\n              lat: marker.latitude.lat,\n              lng: marker.latitude.lng,\n            }}\n            onClick={() => {\n              setSelected(marker);\n            }}\n            icon={{\n              url: tent,\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(20, 20),\n              scaledSize: new window.google.maps.Size(40, 40),\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{\n              lat: selected.latitude.lat,\n              lng: selected.latitude.lng,\n            }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <StyledInfoRating>üìç{selected.address}</StyledInfoRating>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  ) : (\n    <div>loading</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}